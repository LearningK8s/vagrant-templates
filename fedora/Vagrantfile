# -*- mode: ruby -*-
#
# Vagrantfile - One development machine to rule them all.
#


# Provisioning might need updating for different Fedora
# releases, see the "provision.sh" script for details...
fedora_release = 25

# This is the minimum customization necessary but, to tailor this configuration
# to a specific project, you should also edit the "vagrant/provision.sh" script...
vm_name = "Generic Fedora #{fedora_release}"
vm_hostname = "vagrant-fedora-#{fedora_release}"


# The box is assumed to be readily usable by default, but all available
# system updates can be installed during provisioning, if necessary...
install_system_updates = false


# Required for shared folders support with VirtualBox...
unless Vagrant.has_plugin?("vagrant-vbguest")
    raise 'vagrant-vbguest is not installed: type vagrant plugin install vagrant-vbguest'
end


# Location of the external files used by this script...
vagrant_assets = File.dirname(__FILE__) + "/vagrant"


# There is a very high probability that DNF's choice of mirror turns out to
# be a dud. Ensure "fastestmirror" is enabled as early as possible, otherwise
# installing dependencies for the guest additions may take a *very* long time...
class TweakGuestAdditions < VagrantVbguest::Installers::Fedora
    def install_dependencies_cmd
        # Also, remove "bzip2" to avoid conflict warnings (it't already installed anyway)...
        'grep -q fastestmirror=true /etc/dnf/dnf.conf || echo fastestmirror=true >>/etc/dnf/dnf.conf; ' \
        'dnf -q clean all; dnf -q makecache; dnf -y install ' + dependencies.sub('bzip2', '')
    end
end


Vagrant.configure(2) do |config|
    config.vm.box = "fedora/#{fedora_release}-cloud-base"
    config.vm.hostname = vm_hostname

    # The Fedora box defaults to using rsynced folders...
    config.vm.synced_folder ".", "/vagrant", disabled: true

    # Support git operations inside the VM. The file provisioner requires files to exist,
    # which in this case is a good thing as it prevents commits attributed to wrong users...
    config.vm.provision "file", source: "~/.gitconfig", destination: "~/.gitconfig"

    # Make the local user's SSH key reachable by the main provisioning script...
    config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/tmp/id_rsa.pub"

    # Perform base-system customizations and install project-specific dependencies...
    config.vm.provision "shell", path: "#{vagrant_assets}/provision.sh",
                                 env: {"INSTALL_SYSTEM_UPDATES" => install_system_updates.to_s},
                                 privileged: false  # ...run as the "vagrant" user.

    # Immediately apply system updates, if possible...
    if install_system_updates and Vagrant.has_plugin?("vagrant-reload")
        config.vm.provision "reload"
    end

    config.ssh.forward_agent = true
    config.ssh.keep_alive = true


    config.vm.provider "virtualbox" do |vm, override|
        vm.name = vm_name
        vm.gui = false

        vm.memory = 1024
        vm.cpus = 1

        # Install guest additions automatically...
        override.vbguest.auto_update = true
        override.vbguest.installer = TweakGuestAdditions  # ...see above.

        # Prevent guest time from drifting uncontrollably on older hosts, even with
        # time synchronization running in the guest VM. If you have a fairly recent
        # machine this probably won't affect you and can be safely commented-out...
        vm.customize ["modifyvm", :id, "--paravirtprovider", "legacy"]

        # Expose the VM to the host instead of forwarding many ports individually
        # for complex projects. The provisioning script will setup Avahi/mDNS to
        # make the guest VM easily accessible through a "*.local" domain...
        override.vm.network "private_network", type: "dhcp"

        # Make the current directory visible (and editable) inside the VM...
        override.vm.synced_folder ".", "/home/vagrant/shared"
    end
end


# vim: set expandtab ts=4 sw=4 ft=ruby:
